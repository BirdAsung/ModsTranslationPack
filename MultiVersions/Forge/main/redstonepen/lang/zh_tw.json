{
  "language": "繁體中文",
  "language.code": "zh_tw",
  "language.region": "台灣",
  "itemGroup.tabredstonepen": "紅石筆",
  "redstonepen.tooltip.hint.extended": "§6[§9Shift§r 更多§6]§r",
  "redstonepen.tooltip.hint.help": "§6[§9Ctrl-Shift§r 幫助§6]§r",
  "block.redstonepen.basic_button": "基礎按鈕",
  "block.redstonepen.basic_button.help": "基本上適用在任何地方 - 也許吧。",
  "block.redstonepen.basic_lever": "基礎控制桿",
  "block.redstonepen.basic_lever.help": "基本上適用在任何地方 - 也許吧。",
  "block.redstonepen.basic_pulse_button": "基礎脈衝按鈕",
  "block.redstonepen.basic_pulse_button.help": "發出一個 1 tick 的紅石訊號。",
  "block.redstonepen.bistable_relay": "雙穩態紅石中繼器",
  "block.redstonepen.bistable_relay.help": "將來自後方和側面的輸入訊號傳送到前方，輸出訊號強度為15。在偵測到上升訊號邊緣（從關到開）時切換開關。",
  "block.redstonepen.bridge_relay": "橋接紅石中繼器",
  "block.redstonepen.bridge_relay.help": "將來自後方的輸入訊號傳送到前方，輸出訊號強度為 15。從左到右傳遞正常的紅石訊號。",
  "block.redstonepen.control_box": "紅石邏輯控制器",
  "block.redstonepen.control_box.error.expected_assignment": "應為有效賦值",
  "block.redstonepen.control_box.error.invalid_character": "無效字元",
  "block.redstonepen.control_box.error.invalid_number_of_arguments": "函數參數數量無效",
  "block.redstonepen.control_box.error.missing_closing_function_parenthesis": "缺少閉合函數括號 ')'",
  "block.redstonepen.control_box.error.missing_closing_parenthesis": "缺少閉合括號 ')'",
  "block.redstonepen.control_box.error.missing_function_arguments": "缺少函數參數（包含括號）",
  "block.redstonepen.control_box.error.parse_error": "分析錯誤",
  "block.redstonepen.control_box.error.symbol_readonly": "符號/變數是唯讀的",
  "block.redstonepen.control_box.error.unexpected_character": "意外字元",
  "block.redstonepen.control_box.error.unknown_function": "未知函數",
  "block.redstonepen.control_box.help": "簡易可程式邏輯控制器(PLC)",
  "block.redstonepen.control_box.help.1": "§n基礎：§r§7 RLC提供數位（開/關）和類比兩種模式\n§7（訊號強度，比較器輸出）紅石I/O\n§7在所有方向上設定的埠分別是紅、藍、黃、綠、上和下的首字母(R、B、Y、G、U、D)。\n§7你可以使用一組數學表達式來進行程式設計。\n§7所有程式碼都在同一個tick內計算（讀取輸入 ->計算 -> 寫入輸出）。\n§7程式碼不區分大小寫（“R”和“r”是一樣的）。\n§7還可以設置自己的變數，它們的值將保留直到RLC停止。\n§7解析錯誤會以懸停的方式標記出來並防止啟動程式。\n\n§7點擊“執行/停止”按鈕來啟動或停止程式。\n§7游標停在RLC符號上可以看到內部變數值（僅在運行時）。\n§7埠列表顯示當前訊號強度，以及埠的狀態是輸入、輸出還是未使用。\n§7複製/貼上就不多說了，你知道的 ; )",
  "block.redstonepen.control_box.help.10": "§n進階:§r§7 控制器通常每4個tick計算一次，\n§7當輸入埠從ON變為OFF或從OFF變為ON時，運行週期會重新安排到下一個可能的tick。\n§7分配“TICKRATE”變數來改變基礎刻率在2t到20t之間。\n§7\n§7比較器輸入不會觸發此調度。",
  "block.redstonepen.control_box.help.2": "§n表達式§r§7 以“RESULT=TERM”賦值的形式宣告\n§7例如：“R = G & B”，每行程式碼都必須這樣寫。\n§7在開頭使用“#”標記則代表整行皆為註釋。\n§7TERM 可以由括號「(...)」、端口、變量、運算符和函數組成。\n\n§7如果分配變數給埠（R、B、Y、G、U、D），則它會自動設置為輸出，任何輸入訊號的更改將被忽略。\n§7如果在表達式中使用埠變數（尚未輸出），則會自動設置為輸入。\n§7相鄰方塊的比較器輸出以“.CO”後綴讀取。例如“Y = MAX( B.CO, R, g.co, MyVar )”。\n§7即使你分配了變數給它們，“.CO”（比較器輸出）也永遠不會是RLC的輸出。",
  "block.redstonepen.control_box.help.3": "§n算術運算子§r§7 RLC使用整數進行運算，代表“A * 1.5”不被接受，且除法向下捨入。\n§7支持的運算子有：\n\n§7  “+”、“-”、“*”、“/”、“%”（後者為模除法）。\n\n§7變數賦值可保存任何正或負的32位整數值（比你需要的大多了）。\n§7但是埠值會強制限制在有效的紅石值範圍，即0到15之間。\n§7Int32溢出適用，除以零會產生0和通向地牢維度的奇點。",
  "block.redstonepen.control_box.help.4": "§n關係運算子§r§7 提供數值比較：\n\n§7  “==”（等於）、“!=”（不等於）、\n§7  “>=”（大於等於）、“<=”（小於等於）、\n§7  “>”（大於）、“<”（小於）。\n\n§7如果比較結果是“false”，則表達式的值為0，如果是“true”，則為15。\n§7由於這些值是數字，你可以直接計算它們。例如“G=(R>11)/3”結果為5或0。\n§7但是，更好的方法是使用IF函數：“G = IF( R>11, 5, 0 )”。",
  "block.redstonepen.control_box.help.5": "§n邏輯運算子§r§7 支持“紅石布林”值，基本上都是整數。大於 0 的操作被視為 \"true\"。\n§7邏輯運算結果為 \"false\" 時輸出強度 0 的紅石訊號，為\"true\" 時輸出強度 15 的紅石訊號。\n§7可選擇的運算子包括：\n§7\n§7 AND（與閘）：\"AND\"、\"&&\"、\"&\"\n§7 OR（或閘）：\"OR\"、\"||\"、\"|\"\n§7 XOR（互斥或閘）：\"XOR\"、\"^\"\n§7 NOT（非閘）：\"NOT\"、\"!\"\n§7\n§7簡單來說，這些操作就像紅石燈一樣接收輸入並產生類似操縱桿的輸出。\n§7程式設計師注意：這裡沒有位元運算的功能。",
  "block.redstonepen.control_box.help.6": "§n邊緣檢測§r§7 即追蹤輸入訊號從關閉[0]到開啟[>0]以及相反的變化。\n§7上升邊緣觸發器用“.RE”後綴設置，當輸入訊號從關變為開時，在一tick內維持訊號強度為15。\n§7下降邊緣觸發器用“.FE”後綴設置，當輸入訊號從開變為關時，在一tick內保持訊號強度15。\n§7例如：\n§7\n§7 C = C + IF(R.RE OR G.FE OR Y.CO.RE, 1, 0) # 計數器C增加\n§7 C = CNT1(G.RE, B.RE, 10) # 使用上下計數器1\n§7\n§7注意：雖然RLC可能不會在每一tick都執行，但輸入端上的邊緣檢測仍然有效（即“中斷”）。\n§7PLC中的等效項稱為RTRIG和FTRIG。",
  "block.redstonepen.control_box.help.7": "§n定時器§r§7 在PLC中是基於訊號來作用的。\n§7RLC中實現了三種主要定時器：TON、TOF和TP：\n§7TON是一種開啟延遲。輸入訊號必須穩定開啟一段指定時間，定時器輸出才變為開啟。輸入任何關閉的訊號會立即重置定時器。\n§7TOF則相反（關閉延遲）。\n§7TP在檢測到輸入訊號的上升邊緣時生成一個指定時間的脈衝。脈衝期間的任何訊號變化都會被忽略。\n§7RLC有五個簡化的實例：\n§7\n§7 A = TON3(輸入表達式, 通電延遲時長)\n§7 A = TOF2(輸入表達式, 斷電延遲時長)\n§7 A = TP4(輸入表達式, 脈衝時長)\n§7 R = TON1(Y.CO < 3, 30 * 20) # 漏斗低位警報30秒後觸發\n§7 R = TP1(Y.RE, 20) # 偵測器脈衝延長1秒",
  "block.redstonepen.control_box.help.8": "§n計數器§r§7 紀錄事件發生次數。RLC有五個上下計數器CNT1..5，可選擇的輸入參數：\n§7\n§7N = CNTx(Iup)   # 如果Iup > 0，計數增加\n§7N = CNTx(Iup, Idown)   # 如果Idown > 0，計數減少到0\n§7N = CNTx(Iup, Idown, Max)   # 計數範圍0..Max\n§7N = CNTx(Iup, Idown, Min, Max)   # 計數範圍Min..Max\n§7N = CNTx(Iup, Idown, Min, Max, Reset)    # 重置到Min\n§7\n§7N保留新的計數器值。注意：此處偵測訊號邊緣（例如G.RE）作為輸入來進行事件計數。計數器不保證刻度時間的準確性（使用定時器來計時）。",
  "block.redstonepen.control_box.help.9": "§n函數§r\n§7 IF(X,A,B)   # 如果 X>0 則為 A 否則為 B\n§7INV(X)   # 反轉紅石訊號：15-X，結果為 0..15\n§7MAX(A,B,...)、MIN(...)、MEAN(...)   # 最小值、最大值、平均值\n§7LIM(X)、LIM(X,B)、LIM(X,A,B)   # 限制值域到 0..15、0..B、A..B\n§7TIME()、CLOCK()    # 白天時間、遊戲時間\n§7RND()   # 0..15 之間的隨機數\n§7\n§7§nRLC特定函數塊§r\n§7\n§7TIVx(T) #  每間隔T個刻度輸出一次脈衝訊號（TIV1/TIV2/TIV3）§r\n§7TIVx(T, EN) #   啟動後每間隔T個刻度發射一次脈衝訊號。",
  "block.redstonepen.control_box.tooltips.copyall": "複製程式碼到剪貼簿",
  "block.redstonepen.control_box.tooltips.pasteall": "從剪貼簿貼上",
  "block.redstonepen.control_box.tooltips.rcaplayer": "RCA 連接到玩家 %1$s",
  "block.redstonepen.control_box.tooltips.runstop": "執行/停止",
  "block.redstonepen.inverted_relay": "反向紅石中繼器",
  "block.redstonepen.inverted_relay.help": "將背面和側面的輸入訊號中繼到前面，輸出訊號強度為 15。輸出被反轉（如果存在輸入訊號則為 0，否則為 15）。關閉延遲為一個紅石刻，立即開啟。\n也接受來自軌道的間接輸入訊號（連接到傳播紅石訊號的方塊上）。",
  "block.redstonepen.pulse_relay": "脈衝紅石中繼器",
  "block.redstonepen.pulse_relay.help": "在檢測到上升訊號邊緣（由關到開的脈衝控制）時，將在輸出端發出一個1 tick的短脈衝。",
  "block.redstonepen.relay": "紅石中繼器",
  "block.redstonepen.relay.help": "將背面和側面的輸入訊號中繼到前面，輸出紅石訊號為 15。立即開啟，關閉延遲為一個紅石刻。\n也接受來自軌道的間接輸入訊號（連接到傳播紅石訊號的方塊上）。",
  "block.redstonepen.track": "紅石線路",
  "item.redstonepen.pen": "紅石筆",
  "item.redstonepen.pen.help": "用於在所有方向上繪製或移除紅石線路，且可以填充的筆。\n這些線路通常§l不會§r為其放置的方塊供電（單擊線路中心以明確放置/移除連接器）。\n潛行時看向線路，以查看它們當前具有的訊號強度。\n當一個方塊的非連接面有太多紅石線路經過時，會產生串擾而導致斷電，只需重新連接線路即可恢復。",
  "item.redstonepen.pen.tooltip.numstored": "已儲存 %1$s 個紅石",
  "item.redstonepen.pen.tooltip.rsfrominventory": "使用物品欄內的紅石",
  "item.redstonepen.quill": "紅石刷",
  "item.redstonepen.quill.help": "用於在所有方向上繪製或移除紅石線路的筆。\n這些線路通常§l不會§r為其放置的方塊供電（單擊線路中心以明確放置/移除連接器）。\n潛行時看向線路，以查看它們當前具有的訊號強度。\n當一個方塊的非連接面有太多紅石線路經過時，會產生串擾而導致斷電，只需重新連接線路即可恢復。",
  "advancement.redstonepen.craft_redstonepen": "一筆畫天下",
  "advancement.redstonepen.craft_redstonepen.desc": "合成紅石筆",
  "redstonepen.overlay.comparator_compare": " 比較",
  "redstonepen.overlay.comparator_subtract": " 作差",
  "redstonepen.overlay.direct_power": "[%1$s]",
  "redstonepen.overlay.direct_power_at": "[%1$s] @ %2$s",
  "redstonepen.overlay.indirect_power": "(%1$s) @ %2$s",
  "redstonepen.overlay.repeater_delay": " %1$s tick",
  "redstonepen.overlay.track_power": "<%1$s>",
  "redstonepen.overlay.wire_power": "<%1$s>"
}