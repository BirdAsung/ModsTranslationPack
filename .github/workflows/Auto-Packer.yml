name: Auto Package

on:
  push:
    branches:
    - "main"
    paths:
    - "assets/**"
    - "pack.mcmeta"
    - ".github/scripts/override_mods.sh"
  pull_request:
    branches:
    - "main"
    paths:
    - "assets/**"

  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  Packer:
    name: Packer ${{ matrix.version }} Version
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.message, 'chore(main): 發佈') == false

    strategy:
      matrix:
        version: [ 1.18.x, 1.19.x ]

    steps:
      - name: Checking Repostiory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Version Changer
        run: |
          .github/scripts/version_change.sh 1
          .github/scripts/version_change.sh 3 ${{ matrix.version }}

      - name: Override mods
        run: sh .github/scripts/override_mods.sh

      - name: Make ModsTranslationPack
        uses: ComunidadAylas/PackSquash-action@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          force_include_files: |
            LICENSE
            assets/tconstruct/book/**/zh_tw/*.lang
            assets/immersiveengineering/manual/zh_tw/*.txt
          never_store_squash_times: true
          path: ./
          artifact_name: OptimizedPack-${{ matrix.version }}

      - name: DownloadArtifact
        uses: actions/download-artifact@v2
        with:
          name: OptimizedPack-${{ matrix.version }}
          path: ./

      - name: Delete Artifact
        uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            OptimizedPack-${{ matrix.version }}

      - name: Rename ModsTranslationPack
        run: |
          mv ./pack.zip ModsTranslationPack-${{ matrix.version }}.zip

      - name: Upload ModsTranslationPack
        uses: actions/upload-artifact@v3
        with:
          name: ModsTranslationPack-${{ matrix.version }}
          path: "*.zip"

  Per-Releaser:
    name: Per Release
    runs-on: ubuntu-latest
    needs: [ Packer ]
    if: |
      github.event_name != 'pull_request'

    steps:
      - name: Download All Artifact
        uses: actions/download-artifact@v3

      - name: Delete All Artifact
        uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            ModsTranslationPack-1.18.x
            ModsTranslationPack-1.19.x

      - name: Move all zip to workdir
        run: |
          mv ModsTranslationPack-*/*.zip .

      - name: Make Checksum
        id: checksum
        run: |
          echo "sum-01=$(sha256sum ModsTranslationPack-1.19.x.zip)" >> $GITHUB_OUTPUT
          echo "sum-02=$(sha256sum ModsTranslationPack-1.18.x.zip)" >> $GITHUB_OUTPUT

      - name: Make Current Time
        id: current_time
        run: |
          echo "time=$(TZ='Asia/Taipei' date +'最後更新：%Y 年 %m 月 %d 日 %H 點 %M 分')" >> $GITHUB_OUTPUT

      - name: Make Short Git SHA
        id: git_version
        run: |
          echo "sha_short=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Push Pack to Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "*.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: latest
          allowUpdates: true
          prerelease: true
          name: 模組翻譯包 (git ${{ steps.git_version.outputs.sha_short }})
          body: |
            ## 📝 下載
            下載下方的 Assets 內的 ``ModsTranslationPack.zip``
            並放入遊戲的資源包中載入即可!

            ## ⭐ 更新
            此翻譯包會在新增新內容時自動更新
            只要到這個頁面重新下載 zip 即可!

            > ${{ steps.current_time.outputs.time }}

            ## ✅ Checksum
            ```
            ${{ steps.checksum.outputs.sum-01 }}
            ${{ steps.checksum.outputs.sum-02 }}
            ```

  PR-Comment:
    name: PR Comment
    runs-on: ubuntu-latest
    needs: [ Packer ]
    if: |
      github.event_name == 'pull_request'

    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 感謝貢獻！❤️

      - name: Get Current Artifacts
        id: Artifacts
        run: |
          Artifact_1_Name=$(curl -H "Accept: application/vnd.github+json" https://api.github.com/repos/xMikux/ModsTranslationPack/actions/runs/${{ github.run_id }}/artifacts | jq -r '.artifacts[1] | .name')
          Artifact_1_ID=$(curl -H "Accept: application/vnd.github+json" https://api.github.com/repos/xMikux/ModsTranslationPack/actions/runs/${{ github.run_id }}/artifacts | jq -r '.artifacts[1] | .id')
          Artifact_2_Name=$(curl -H "Accept: application/vnd.github+json" https://api.github.com/repos/xMikux/ModsTranslationPack/actions/runs/${{ github.run_id }}/artifacts | jq -r '.artifacts[2] | .name')
          Artifact_2_ID=$(curl -H "Accept: application/vnd.github+json" https://api.github.com/repos/xMikux/ModsTranslationPack/actions/runs/${{ github.run_id }}/artifacts | jq -r '.artifacts[2] | .id')
          echo "Artifact_1_Name=$Artifact_1_Name" >> $GITHUB_OUTPUT
          echo "$Artifact_1_Name"
          echo "Artifact_1_ID=$Artifact_1_ID" >> $GITHUB_OUTPUT
          echo "$Artifact_1_ID"
          echo "Artifact_2_Name=$Artifact_2_Name" >> $GITHUB_OUTPUT
          echo "$Artifact_2_Name"
          echo "Artifact_2_ID=$Artifact_2_ID" >> $GITHUB_OUTPUT
          echo "$Artifact_2_ID"

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            感謝貢獻！❤️
            
            下載合併請求測試用翻譯包：
            - [${{ steps.Artifacts.outputs.Artifact_1_Name }}](https://nightly.link/xMikux/TestingModTranslate/actions/artifacts/${{ steps.Artifacts.outputs.Artifact_1_ID }}.zip)
            - [${{ steps.Artifacts.outputs.Artifact_2_Name }}](https://nightly.link/xMikux/TestingModTranslate/actions/artifacts/${{ steps.Artifacts.outputs.Artifact_2_ID }}.zip)
          edit-mode: replace